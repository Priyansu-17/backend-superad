const createContact =(req,res)=>{
  // res.status(201).json({message: "post request received"})
  // console.log(req.body)
  const db=readDatabase();
  const newUser={
    id: db.users.length ? db.users[db.users.length-1].id+1 :1,
    ...req.body
  };

  db.users.push(newUser);
  writeDatabase(db)
  res.status(201).json(newUser);
}

const updateContact =(req,res)=>{
  // res.json({message : `update by id: ${req.params.id}`})
  
  // const db=readDatabase();
  // const userIndex=db.users.find((user)=>{
  //   user.id===parseInt(req.params.id);
  //   console.log(user.id);
  //   console.log(req.params.id);
  //   console.log(typeof(user.id));
  //   console.log(typeof(parseInt(req.params.id)));

  // })
  // if(userIndex!==-1){
  //   const updatedUser ={
  //     ...db.users[userIndex],...req.body
  //   }
  //   db.users[userIndex]=updatedUser;
  //   writeDatabase(db);
  //   res.json(updatedUser)
  // }
  // else{
  //   console.log("invalid id")
  // }
  const db = readDatabase();
  const user = db.users.find(user => user.id === parseInt(req.params.id));
  if (user) {
    const userIndex= db.users.findIndex(it=> it.id=== user.id);
    // console.log(userIndex);
    const updatedUser ={
          ...db.users[userIndex],...req.body
        }
        db.users[userIndex]=updatedUser;
        writeDatabase(db);
        res.json(updatedUser)
  } else {
    res.status(404).send('User not found');
  }
}



const getContactById =(req,res)=>{
  // res.json({message: `get with id: ${req.params.id}`})
  const db = readDatabase();
  const user = db.users.find(user => user.id === parseInt(req.params.id));
  if (user) {
    res.json(user);
  } else {
    res.status(404).send('User not found');
  }
}



const deleteContactById =(req,res)=>{
  // res.json({message: `delete with id ${req.params.id}`})
  const db = readDatabase();
  const user = db.users.find(user => user.id === parseInt(req.params.id));
  if (user) {
    const userIndex=db.users.findIndex(it=> it.id===user.id)
    const deletedUser=db.users.splice(userIndex, 1)[0];
    writeDatabase(db);
    res.status(200).json({ deletedUser });
  } else {
    res.status(404).send('User not found');
  }
}